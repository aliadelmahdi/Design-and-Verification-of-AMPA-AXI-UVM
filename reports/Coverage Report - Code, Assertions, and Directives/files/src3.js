var g_data = {"name":"top/top.sv","src":"import uvm_pkg::*;        // UVM base classes and utilities\nimport AXI_env_pkg::*;    // AXI environment components\nimport AXI_test_pkg::*;   // AXI test definitions\nimport shared_pkg::*;     // Shared enums, typedefs, parameters\n\n`timescale `TIME_UNIT / `TIME_PRECISION\n\nmodule tb_top;\n    bit aclk; // AXI clock signal\n    string testname,test_n;\n\n\n    // ------------------------\n    // Clock Generation\n    // ------------------------\n    initial begin\n        aclk = `LOW;\n        forever #(`CLK_PERIOD/2) aclk = ~aclk; // Toggle clock every half period\n    end\n   \n    // Environment and Test handles\n    AXI_env       env_instance; // AXI environment instance\n    AXI_test_base test;         // Base AXI test instance\n\n    // ------------------------\n    // DUT & Interface Instances\n    // ------------------------\n    AXI_if         axi_if (aclk);       // AXI interface\n    AXI_master_gld master_gld (axi_if); // Golden model for AXI master\n    AXI_slave_gld  slave_gld (axi_if);  // Golden model for AXI slave\n    AXI_master master ();               // DUT for AXI master\n    AXI_slave  slave ();                // DUT for AXI slave\n\n    // ------------------------\n    // Simulation Control\n    // ------------------------\n    initial begin\n        testname = \"AXI_smoke_test\";\n\n        uvm_top.set_report_verbosity_level(UVM_MEDIUM);    // Set default UVM verbosity\n        uvm_top.finish_on_completion = `DISABLE_FINISH;    // Prevent automatic $finish\n        uvm_config_db#(virtual AXI_if)::set(null, \"*\", \"axi_if\", axi_if); // Set interface globally\n        \n        // ==========================\n        // Tests\n        // ==========================\n        // run_test(\"AXI_smoke_test\");\n        // run_test(\"AXI_burst_modes_test\");\n        // run_test(\"AXI_flow_control_test\");\n        // run_test(\"AXI_robustness_test\");\n\n        if (!$value$plusargs(\"UVM_TESTNAME=%s\", testname)) begin\n            test_n = testname;\n            `uvm_info(\"TB_TOP\", \"No +UVM_TESTNAME specified. Defaulting to AXI_smoke_test.\", UVM_LOW)\n        end\n\n        run_test(test_n);\n\n        `uvm_info(\"SEED\", $sformatf(\"Current seed: %0d\", $get_initial_random_seed()), UVM_LOW)\n        repeat(3) `display_separator // Print separator lines\n        $stop; // Stop simulation after test completion\n    end\nendmodule : tb_top","lang":"verilog"};
processSrcData(g_data);